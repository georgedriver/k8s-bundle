{{- $root := . }}

# Users of Helm v3 should set the installCRDs value to false to avoid warnings about nonexistant webhooks.
installCRDs: false

dex:
  enabled: false
{{- if .Environment.Values | getOrNil "argocd.env" }}
  env:
{{ toYaml .Environment.Values.argocd.env | indent 2 }}
{{- end }}

{{- if .Environment.Values | getOrNil "argocd.env" }}
repoServer:
  env:
{{ toYaml .Environment.Values.argocd.env | indent 2 }}
{{- end }}

server:
# Reset admin password `kubectl patch secret argocd-secret  -p '{"data": {"admin.password": null, "admin.passwordMtime": null}}'` and then restart the pod
{{- if .Environment.Values | getOrNil "argocd.env" }}
  env:
{{ toYaml .Environment.Values.argocd.env | indent 2 }}
{{- end }}

  ingress:
    enabled: {{ .Environment.Values | getOrNil "ingress.enabled" | default false }}
    annotations:
      kubernetes.io/ingress.class: {{ .Environment.Values.cluster.ingress_class }}
      cert-manager.io/cluster-issuer: {{ .Environment.Values.cluster.cluster_issuer }}
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      nginx.org/server-snippet: proxy_ssl_verify off;
    hosts:
    - argo.{{ .Environment.Values.cluster.domain }}
    tls:
    - hosts:
      - argo.{{ .Environment.Values.cluster.domain }}
      secretName: argo.{{ .Environment.Values.cluster.domain }}

  config:
    url: https://argo.{{ .Environment.Values.cluster.domain }}

    statusbadge.enabled: "true"
    users.anonymous.enabled: "false"

{{- if .Environment.Values | getOrNil "argocd.git_user" }}
    # https://github.com/argoproj/argo-cd/blob/master/docs/faq.md#argo-cd-cannot-deploy-helm-chart-based-applications-without-internet-access-how-can-i-solve-it
    repositories: |
      - type: helm
        url: https://charts.helm.sh/stable
        name: stable
      - url: {{ .Environment.Values.argocd.git_url }}
        passwordSecret:
          name: argo-git-repo-secret
          key: password
        usernameSecret:
          name: argo-git-repo-secret
          key: username

  additionalApplications:
    - name: 00-app-of-apps
      namespace: argocd
      project: default
      source:
        repoURL: {{ .Environment.Values.argocd.git_url }}
        targetRevision: HEAD
        path: {{ .Environment.Values.argocd.value_file_path }}
        helm:
          valueFiles:
            - {{ .Environment.Values.argocd.value_file_name }}
      destination:
          server: https://kubernetes.default.svc
          namespace: argocd
      syncPolicy:
        automated:
          prune: true
{{- end }}

{{with (readFile "../namespaces.values" | fromYaml)}}
  additionalProjects:
  {{range .namespaces}}
  - name: {{.name}}
    namespace: argocd
    description: ArgoCD Services Project - {{.name}}
    sourceRepos:
    - '*'
    destinations:
    - namespace: {{.name}}
      server: '*'
    clusterResourceWhitelist:
    - group: '*'
      kind: '*'
    roles:
    - name: read-only
      description: Read-only privileges to {{.name}}
      policies:
      - p, proj:{{.name}}:read-only, applications, get, {{.name}}/*, allow
    - name: ci-role
      description: Sync privileges for all apps in {{.name}}
      policies:
      - p, proj:{{.name}}:ci-role, applications, sync, {{.name}}/*, allow
      - p, proj:{{.name}}:ci-role, applications, update, {{.name}}/*, allow
  {{end}}

## Argo Configs
configs:
  # -- Provide one or multiple [external cluster credentials]
  # @default -- `[]` (See [values.yaml])
  ## Ref:
  ## - https://argoproj.github.io/argo-cd/operator-manual/declarative-setup/#clusters
  ## - https://argoproj.github.io/argo-cd/operator-manual/security/#external-cluster-credentials
  secret:
    # -- Bcrypt hashed admin password
    ## Argo expects the password in the secret to be bcrypt hashed. You can create this hash with
    ## `htpasswd -nbBC 10 "" password | tr -d ':\n' | sed 's/$2y/$2a/'`
    argocdServerAdminPassword: "$2a$10$kiln.zWX9u.4/CPxBxQIO.LpZaAtEYC.MXXb8au.orHnXA7zvHLLi"
    # -- Admin password modification time. Eg. `"2006-01-02T15:04:05Z"`
    # @default -- `""` (defaults to current time)
    argocdServerAdminPasswordMtime: "2020-09-01T10:11:12Z"

{{end}}
